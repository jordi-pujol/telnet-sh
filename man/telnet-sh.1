.TH TELNET-SH "1" "August 2016" "Live never ending Tale" "Utilities"
.SH NAME
.B telnet-sh
\- client for telnet with built-in automatization
.SH SYNOPSIS
.B telnet-sh
[\fI\,OPTION\/\fR]... \fI\,HOST \/\fR[\fI\,PORT/SERVICE\/\fR]
.SH DESCRIPTION
.PP
The telnet utility communicates with another host using the
TELNET protocol.
.PP
This is a tiny implementation of telnet written in Bash; provides 
automatization via scripts of commands, it's suitable to perform a 
communication session without the user intervention.
This utility has a limited set of commands, some protocol commands, 
like OPEN, are not implemented; so the host name must be specified in 
the command line.
Scripts  may use environment variables, for example the variables TUSER 
and TPASS are set by the corresponding options.
.SH OPTIONS
.PP
.TP
\fB\-a\fR
Automatic login with $USER variable
.TP
\fB\-b\fR
Batch mode, script required, will not watch for input from terminal,
automatic switch to batch mode when stdin is not a terminal
.TP
\fB\-c\fR script
Execute commands from this script file before going interactive,
reads script from stdin when filename is '-' or stdin is not a terminal
.TP
\fB\-d\fR
Dump received server stream to a temporary file.
Every newline control code will break lines.
.TP
\fB\-l\fR TUSER
Automatic login as TUSER. Sets the shell variable TUSER.
.TP
\fB\-p\fR TPASS
TUSER password. Sets the shell variable TPASS.
.TP
\fB\-s\fR
silent run, don't write output to /dev/stdout
.PP
.SH SCRIPT COMMANDS
.PP
An script of commands is a text file that contains a command in every 
line. May use environment variables,
TUSER and TPASS have been set by application options.
Comment lines start by the # character.
.PP
.TP
\fBsilent/nosilent\fR
command to disable of enable writing to stdout
.TP
\fBexpect\fR "string waiting for-1" "answer-1"...["string waiting for-N" "answer-N"]
expects a list of strings and sends the corresponding answer. Expected 
strings are regular expressions to be used in grep; control codes in 
expected strings are in hexadecimal form %XX. Answers will by written 
by a printf command, control codes must be codified accordingly; for 
answer's format see documentation on Bash printf command.
.TP
\fBinteractive\fR
stops the script,
enables terminal keyboard or exits when batch mode is enabled.
.PP
.SH INTERACTIVE COMMANDS
.PP
In interactive mode the user can enter one command pressing the escape 
key '^[' (X1D). Interactive commands also may be used in scripts, one 
for line.
.PP
.TP
\fBcrlf/nocrlf\fR
when the user presses a carriage return, telnet-sh will send CR-LF 
instead.
.TP
\fBecho/noecho\fR
The characters sent to the server will also be written on the local 
terminal.
.TP
\fBbackspace/nobackspace\fR
Pressing the delete key (x7F) will send a backspace code (x08) to the server.
.PP
.SH AUTHOR
Written by Jordi Pujol Palomer.
.SH "REPORTING BUGS"
Jordi Pujol Palomer <jordipujolp@gmail.com>
.SH COPYRIGHT
Copyright \(co 2016 Jordi Pujol Palomer
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
